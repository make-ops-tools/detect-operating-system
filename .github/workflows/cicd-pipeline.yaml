name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  get-datetime:
    runs-on: ubuntu-latest
    outputs:
      datetime: ${{ steps.datetime.outputs.datetime }}
      timestamp: ${{ steps.datetime.outputs.timestamp }}
      epoch: ${{ steps.datetime.outputs.epoch }}
    steps:
      - id: datetime
        run: |
          datetime=$(date -u +'%Y-%m-%dT%H:%M:%S%z')
          echo "datetime=$datetime" >> $GITHUB_OUTPUT
          echo "timestamp=$(date --date=$datetime -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          echo "epoch=$(date --date=$datetime -u +'%s')" >> $GITHUB_OUTPUT
  check-file-format:
    uses: ./.github/workflows/check-file-format.yaml
  check-markdown-format:
    uses: ./.github/workflows/check-markdown-format.yaml
  cloc-repository:
    uses: ./.github/workflows/cloc-repository.yaml
  cicd-pipeline-test:
    runs-on: ubuntu-latest
    needs:
      [get-datetime, check-file-format, check-markdown-format, cloc-repository]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: List Variables
        run: |
          export BUILD_DATETIME="${{ needs.get-datetime.outputs.datetime }}"
          export BUILD_TIMESTAMP="${{ needs.get-datetime.outputs.timestamp }}"
          export BUILD_EPOCH="${{ needs.get-datetime.outputs.epoch }}"
          make list-variables
      - name: Run Functional Test Suite
        run: |
          make test
      - name: Run Installation Test
        run: |
          curl -L https://raw.githubusercontent.com/makeops-tools/detect-operating-system/main/install.sh | bash
          test -x ~/.local/bin/detect-operating-system.sh
